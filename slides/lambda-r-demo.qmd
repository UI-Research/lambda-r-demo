---
title: "Running R on AWS Lambda"
author: "Erika Tyagi"
date: "2023-05-10"
format: 
    revealjs: 
        slide-number: c/t
        width: 1250
        height: 800
---

## What is AWS Lambda? 

- Lambda is an AWS service that lets you run code in the cloud without having to provision or manage servers. 
- You define a Lambda function to run code in a particular execution environment when triggered by an invocation event. 
- You only pay for what you use (based on the number of requests, allocated memory, and execution time). 

## How does Urban use Lambda? (1/2)

- When you request an EC2 instance or EMR cluster from [Tech Tools](https://tech-tools.urban.org/), a Lambda function creates the requested resource and sends you an email with access instructions. 
- When a user requests data from the [Education Data Portal](https://educationdata.urban.org/) summary endpoints, a Lambda function queries data on S3 to compute aggregated statistics on the fly. 
- When a user uploads a dataset to the [Spatial Equity Data Tool](https://apps.urban.org/features/equity-data-tool/index.html), a Lambda function computes geographic and demographic disparity scores to return to the user. 

## How does Urban use Lambda? (2/2)
- Every day at 8AM, a Lambda function pulls and saves the previous day's usage data from the [Education Data Portal](https://educationdata.urban.org/) API. 
- When researchers upload new data to S3, a Lambda function runs data quality checks and updates the database tables that power the [State and Local Finance](https://state-local-finance-data.taxpolicycenter.org//pages.cfm) and [Children of Immigrants](https://apps.urban.org/features/children-of-immigrants/) data tools. 
- When a user submits an analysis to the validation server, thousands of Lambda functions run the analysis on subsets of the data in parallel to compute privacy-preserving results. 
- And 180+ other ways! 

## Why are Lambda functions useful? 
 
- Cost: They're relatively cheap (especially for unpredictable workloads).^[The AWS Lambda free tier includes 1M free requests per month and 400K GB-seconds of compute time per month. After that, pricing is based on the number of requests ($0.20 per 1M) and duration ($0.0000166667 for every GB-second) based on allocated memory. See detailed pricing information [here](https://aws.amazon.com/lambda/pricing/).]
- Ease of setup: They're generally easier to set up and maintain than non-serverless applications. 
- Scalability: They can scale to meet demand without custom engineering. 
- Flexibility: They support a variety of event sources and custom configurations, and they're the heart of an active serverless developer community. 


## What are some Lambda limitations? 

- They have a maximum runtime of 15 minutes. 
- They have memory, storage, and concurrency constraints.^[This can be complicated. See [here](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html) for detailed information on Lambda quotas.] 
- They only natively support Java, Go, PowerShell, Node.js, C#, Python, and Ruby. 

## How can I run R code on Lambda functions? 

- Define a custom runtime (through a container image) with R installed. 
    - Option 1: Use the [rpy2](https://rpy2.github.io/) Python package. 
    - Option 2: Use the [lambdr](https://lambdr.mdneuzerling.com/) R package. 

::: {layout-ncol="2"}
![](images/rpy2.png){width=380}

![](images/lambdr.png){width=410}
:::

## Option 1: rpy2 (1/2) 

- Start with the AWS Python 3.9 Lambda image. 
- Install R, system dependencies, (optionally) additional R packages, and the rpy2 Python package. 

```code 
FROM public.ecr.aws/lambda/python:3.9

ENV R_VERSION=4.2.1

RUN yum -y install wget git tar openssl-devel libxml2-devel \
  && yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
  && wget https://cdn.rstudio.com/r/centos-7/pkgs/R-${R_VERSION}-1-1.x86_64.rpm \
  && yum -y install R-${R_VERSION}-1-1.x86_64.rpm \
  && rm R-${R_VERSION}-1-1.x86_64.rpm 

ENV PATH="${PATH}:/opt/R/${R_VERSION}/bin/" 
ENV LD_LIBRARY_PATH="/opt/R/${R_VERSION}/lib/R/lib/" 

RUN R -e "install.packages(c('aws.s3', 'dplyr'), repos = 'https://cloud.r-project.org/')"

COPY requirements.txt  .
RUN  pip3 install -r requirements.txt --target "${LAMBDA_TASK_ROOT}"

COPY . ${LAMBDA_TASK_ROOT} 
```

## Option 1: rpy2 (2/2) 
- Write your R code. 
```code 
parity <- function(number) {
    return (if (as.integer(number) %% 2 == 0) "even" else "odd")
}
```
- From your Python code, use rpy2 to source and call your R code from the Lambda handler. 
```code
from rpy2.robjects import r

def lambda_handler(event, context):
   number = event['number']
   r('''source("utils.R")''')
   return r['parity'](number)[0]
```

## Option 2: lambdr (1/2)

- Start with the AWS base Lambda image. 
- Install R, system dependencies, the lambdr R package, (optionally) additional R packages, and a bootstrap file. 

```code 
FROM public.ecr.aws/lambda/provided

ENV R_VERSION=4.0.3
ENV R_SCRIPT=app.R 

RUN yum -y install wget git tar openssl-devel libxml2-devel \
  && yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
  && wget https://cdn.rstudio.com/r/centos-7/pkgs/R-${R_VERSION}-1-1.x86_64.rpm \
  && yum -y install R-${R_VERSION}-1-1.x86_64.rpm \
  && rm R-${R_VERSION}-1-1.x86_64.rpm 

ENV PATH="${PATH}:/opt/R/${R_VERSION}/bin/"

RUN R -e "install.packages(c('aws.s3', 'dplyr', 'lambdr'), repos = 'https://cloud.r-project.org/')"

RUN mkdir /lambda
COPY ${R_SCRIPT} /lambda
RUN chmod 755 -R /lambda

RUN printf '#!/bin/sh\ncd /lambda\nRscript ${R_SCRIPT}' > /var/runtime/bootstrap \
  && chmod +x /var/runtime/bootstrap
```

## Option 2: lambdr (2/2)
- Write your R code and define your handler. 
- From your R code, call `lambdr::start_lambda()`. 

```code 
parity <- function(number) {
    return (if (as.integer(number) %% 2 == 0) "even" else "odd")
}

lambdr::start_lambda()
```

## Demo 

- A repository demonstrating how to define and deploy Lambda functions using both approaches through the [Serverless Application Model](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html) can be found here: [UI-Research/lambda-r-demo](https://github.com/UI-Research/lambda-r-demo). 
